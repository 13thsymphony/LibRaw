
== К версии 0.5 (первый публичный релиз)

Цель: получить замену dcraw с удобным интерфейсом, без всяких
хакерских глупостей, но выдающую те же бинарные данные.
В API есть вызовы "поэмулировать такое-то место dcraw: постобработчик,
запись в файл"

10. Тестирование, как минимум на файлах major camera makers 
   (Nikon/Canon/Oly/Sony/Pentax), добиваемся бинарной идентичности
   для dcraw -D и, желательно, dcraw без параметров 
   - в большинстве своем  DONE
   перед публичным выпуском нужен прогон на нескольких гигабайтах данных TODO

11. libraw.so, libraw_r, make install (libraw_r - DONE, install - DONE)

12. Откатиться на FILE  I/O ???

14. Сайт, включая 
    - дырку для feedback
    - дырку для аплоада самплов RAW (???)
    - двуязычный

15. Выпуск первой публичной версии (начало - середина апреля ??)


=== к версии 0.9 (второй публичный релиз)

Цель: видимое улучшение dcraw, картинка лучше.

I. Удобство использования:

1. Настраиваемый на этапе компиляции набор камер
   * Минимум - возможность оторвать Foveon
   * Максимум - настройка на уровне Maker

2. Улучшение разбора EXIF
   * требуется точная спецификация "что же мы хотим от
     EXIF на этом этапе"

II. Улучшение извлечения данных:

3. Работа с вычитанием черного - часть 1
   * полностью оторвать вычитание черного, заменив 
     его вычислением
   * сделать dcraw-совместимый вызов, вычитающий черный
     по-коффиновски.

4. Работа с черной рамкой (часть 2 работы с черным)
   * Возвращать рамку отдельно (в отдельном наборе данных),
     без обработки.
      - нужны таблицы с координатами рамок там где рамок две.


5. Исправить ошибки с Хаффманом.
    - нужны демонстрационные данные, на которых улучшение
      было бы ясно видно.

III. Улучшение обработки данных

6. Работа со вторым зеленым каналом отдельно.
7. Работа с черной рамкой

Нужны демо-картинки, на которых видны были бы улучшения.


IV. Прочие улучшения

8. Стабилизация API

